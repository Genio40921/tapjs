{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,UAAU,CAAA;AACnC,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AAEnC,MAAM,UAAU,GAAe,EAAE,CAAA;AACjC,MAAM,CAAC,MAAM,SAAS,GAAG,GAAG,EAAE,CAAC,UAAU,CAAA;AAEzC,MAAM,CAAC,OAAO,OAAO,QAAS,SAAQ,QAAgB;IACpD,MAAM,CAAQ;IACd;QACE,KAAK,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAA;QAC3B,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACrB,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE;YACjC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAA;YACpC,KAAK,CAAC,GAAG,EAAE,CAAA;QACb,CAAC,CAAC,CAAA;IACJ,CAAC;IACD,KAAK,CAAC,CAAkB;QACtB,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;QACd,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;IAC7B,CAAC;IACD,GAAG;QACD,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAA;QACjB,OAAO,IAAI,CAAA;IACb,CAAC;CACF","sourcesContent":["import { Minipass } from 'minipass'\nimport { Parser } from 'tap-parser'\n\nconst instances_: Reporter[] = []\nexport const instances = () => instances_\n\nexport default class Reporter extends Minipass<string> {\n  parser: Parser\n  constructor() {\n    super({ encoding: 'utf8' })\n    instances_.push(this)\n    this.parser = new Parser(results => {\n      super.write(JSON.stringify(results))\n      super.end()\n    })\n  }\n  write(c: string | Buffer) {\n    super.write(c)\n    return this.parser.write(c)\n  }\n  end() {\n    this.parser.end()\n    return this\n  }\n}\n"]}