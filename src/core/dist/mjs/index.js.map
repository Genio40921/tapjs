{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAIH,4DAA4D;AAC5D,4DAA4D;AAC5D,6BAA6B;AAC7B,cAAc,WAAW,CAAA;AACzB,cAAc,aAAa,CAAA;AAC3B,cAAc,YAAY,CAAA;AAC1B,cAAc,gBAAgB,CAAA;AAC9B,cAAc,cAAc,CAAA;AAC5B,cAAc,8BAA8B,CAAA;AAE5C,cAAc,kBAAkB,CAAA;AAChC,cAAc,sBAAsB,CAAA;AACpC,cAAc,WAAW,CAAA;AACzB,cAAc,YAAY,CAAA;AAC1B,cAAc,YAAY,CAAA;AAC1B,cAAc,cAAc,CAAA;AAC5B,cAAc,UAAU,CAAA;AACxB,cAAc,iBAAiB,CAAA;AAC/B,cAAc,aAAa,CAAA;AAC3B,cAAc,aAAa,CAAA","sourcesContent":["/**\n * Main export of the @tapjs/core module, providing the bulk of\n * the internal machinery of tests.\n *\n * @module\n */\n\nimport { CallSiteLike, CallSiteLikeJSON } from '@tapjs/stack'\n\n// base and test-base have to come before tap.js, because it\n// extends Test which extends TestBase, so has to be present\n// in the exports right away.\nexport * from './base.js'\nexport * from './counts.js'\nexport * from './lists.js'\nexport * from './test-base.js'\nexport * from './minimal.js'\nexport * from './normalize-message-extra.js'\n\nexport * from './main-script.js'\nexport * from './parse-test-args.js'\nexport * from './proc.js'\nexport * from './spawn.js'\nexport * from './stdin.js'\nexport * from './tap-dir.js'\nexport * from './tap.js'\nexport * from './test-point.js'\nexport * from './waiter.js'\nexport * from './worker.js'\n\n/**\n * The extra info passed to assertions.\n *\n * Extended by BaseOpts, TestBaseOpts, and ultimately TestOpts, since any\n * subtest is also an assertion, and can take all the same assertion options.\n */\nexport interface Extra {\n  bail?: boolean\n  todo?: string | boolean\n  skip?: string | boolean\n  at?: CallSiteLike | CallSiteLikeJSON | null\n  stack?: string\n  source?: string\n  found?: any\n  wanted?: any\n  doNotWant?: any\n  pattern?: any\n  diff?: string\n  message?: string\n  expired?: string\n  // error properties\n  type?: string\n  error?: any\n  expectFail?: boolean\n  diagnostic?: boolean\n  tapChildBuffer?: string\n  test?: string\n  [k: string]: any\n}\n\n/**\n * The optional `..., message, extra)` arguments passed to\n * test assertions.\n */\nexport type MessageExtra = [] | [string] | [Extra] | [string, Extra]\n"]}