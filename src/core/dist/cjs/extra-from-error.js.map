{"version":3,"file":"extra-from-error.js","sourceRoot":"","sources":["../../src/extra-from-error.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oDAAqC;AAI9B,MAAM,cAAc,GAAG,CAC5B,EAAO,EACP,KAAa,EACb,OAAkB,EAClB,EAAE;IACF,oDAAoD;IACpD,IACE,EAAE,CAAC,MAAM;QACT,OAAO,EAAE,CAAC,MAAM,KAAK,QAAQ;QAC7B,EAAE,CAAC,MAAM,CAAC,OAAO,EACjB;QACA,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,EAAE,GAAG,EAAE,CAAC,MAAM,CAAA;QACxC,EAAE,CAAC,MAAM,GAAG,MAAM,CAAA;KACnB;IAED,iEAAiE;IACjE,8DAA8D;IAC9D,KAAK,GAAG,MAAM,CAAC,MAAM,CACnB,KAAK,IAAI,EAAE,EACX,MAAM,CAAC,WAAW,CAChB,MAAM,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,MAAM,CAClC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CACN,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAChD,CACF,CACF,CAAA;IAED,IAAI,CAAC,EAAE,IAAI,OAAO,EAAE,KAAK,QAAQ,EAAE;QACjC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAA;QAChB,OAAO,KAAK,CAAA;KACb;IAED,MAAM,EAAE,GAAG,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC,CAAA;IACjC,MAAM,OAAO,GAAG,EAAE,CAAC,OAAO;QACxB,CAAC,CAAC,EAAE,CAAC,OAAO;QACZ,CAAC,CAAC,EAAE,CAAC,KAAK;YACV,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,CAAC,CAAC,EAAE,CAAA;IACN,IAAI,EAAE,IAAI,EAAE,CAAC,MAAM,EAAE;QACnB,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC/C,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;KACjB;IAED,IAAI,OAAO,EAAE;QACX,IAAI;YACF,MAAM,CAAC,cAAc,CAAC,EAAE,EAAE,SAAS,EAAE;gBACnC,KAAK,EAAE,OAAO;gBACd,YAAY,EAAE,IAAI;aACnB,CAAC,CAAA;SACH;QAAC,MAAM,GAAE;KACX;IAED,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,KAAK,OAAO,EAAE;QAClC,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAA;KACrB;IAED,6BAA6B;IAC7B,MAAM,EAAE,OAAO,EAAE,CAAC,EAAE,GAAG,KAAK,EAAE,GAAG,EAAE,CAAA;IACnC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;IAE3B,OAAO,KAAK,CAAA;AACd,CAAC,CAAA;AA7DY,QAAA,cAAc,kBA6D1B","sourcesContent":["import * as stack from '@tapjs/stack'\nimport type { BaseOpts } from './base.js'\nimport { Extra } from './index.js'\n\nexport const extraFromError = (\n  er: any,\n  extra?: Extra,\n  options?: BaseOpts\n) => {\n  // the yaml module puts big stuff here, pluck it off\n  if (\n    er.source &&\n    typeof er.source === 'object' &&\n    er.source.context\n  ) {\n    const { context, ...source } = er.source\n    er.source = source\n  }\n\n  // pull out all fields from options, other than anything starting\n  // with tapChild, or anything already set in the extra object.\n  extra = Object.assign(\n    extra || {},\n    Object.fromEntries(\n      Object.entries(options || {}).filter(\n        ([k]) =>\n          !/^tapChild/.test(k) && !(k in (extra || {}))\n      )\n    )\n  )\n\n  if (!er || typeof er !== 'object') {\n    extra.error = er\n    return extra\n  }\n\n  const st = stack.captureError(er)\n  const message = er.message\n    ? er.message\n    : er.stack\n    ? er.stack.split('\\n')[0]\n    : ''\n  if (st && st.length) {\n    extra.stack = st.map(c => String(c)).join('\\n')\n    extra.at = st[0]\n  }\n\n  if (message) {\n    try {\n      Object.defineProperty(er, 'message', {\n        value: message,\n        configurable: true,\n      })\n    } catch {}\n  }\n\n  if (er.name && er.name !== 'Error') {\n    extra.type = er.name\n  }\n\n  // grab any other rando props\n  const { message: _, ...props } = er\n  Object.assign(extra, props)\n\n  return extra\n}\n"]}